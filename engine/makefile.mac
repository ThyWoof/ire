#####################################
#                                   #
#  Makefile for IRE, MacOS version  #
#                                   #
#####################################

# Define all the targets first
all: library_bgui2 library_ithe ire ed chknpc resize png2cel cel2png # mover

##
##  Configurables:
##

# Where to put binary on 'make install'?
INSTALL_BIN = $/usr/games
     
# Where to put data on 'make install'?
INSTALL_DATA = $/usr/share/games/ire/data

# Where to put data on 'make install'?
INI_FILES = $/etc/ire

# Debugging and profiling
#PROF += -pg
DBG += -g


# Pick one of the following sound libraries:
# SOUND = fmod3		# Higher quality, but non-Free
# SOUND = fmod4		# Higher quality, but non-Free (experimental)
# SOUND = allegro	# Lower quality, but fully-Free
# SOUND = sdl		# Higher quality, fully-Free, needs SDL_mixer

SOUND = sdl

# Graphics backends
#GRAPHICS = allegro4
GRAPHICS = sdl12


# Choose whether to use the X86 assembly optimisations
# make -fmakefile.mac ASM=...
#
# ASM=i386
# ASM=amd64
# ASM=arm
# ASM=no_asm		# no assembly code

ifeq ($(ASM),)
ASM = no_asm
endif

##
##  Okay, do the stuff
##

# FMOD3 sound library.  May need tweaking
ifeq ($(SOUND),fmod3)
	SOUNDLIB_C       = -DUSE_FMOD3
			  # Force IRE to load the FMOD library from current dir
	SOUNDLIB_L       = -lfmod-3.70 -L. -Xlinker -rpath .
endif

# FMOD4 sound library.  May need tweaking
ifeq ($(SOUND),fmod4)
	SOUNDLIB_C       = -DUSE_FMOD4
			  # Force IRE to load the FMOD library from current dir
#	SOUNDLIB_L       = -lfmod-3.6 -L. -Xlinker -rpath .
	SOUNDLIB_L       = -lfmodex
endif

# ALLEGRO sound library with ALOGG.
ifeq ($(SOUND),allegro)
	SOUNDLIB_C	 = -DUSE_ALOGG -DUSE_ALSOUND `alogg-config --cflags`
	SOUNDLIB_L	 = `alogg-config --libs`
endif

# SDL sound library
ifeq ($(SOUND),sdl)
	SOUNDLIB_C	 = -DUSE_SDLSOUND `sdl-config --cflags`
	SOUNDLIB_L	 = `sdl-config --libs` -lSDL_mixer
endif

# no sound library
ifeq ($(SOUND),none)
	SOUNDLIB_C	 = -DUSE_NOSOUND
	SOUNDLIB_L	 = 
endif

# Graphics 
gfx_obj = $(gfx_core_obj)

# Allegro 4.x
ifeq ($(GRAPHICS),allegro4)
	GRAPHICSLIB_C       = -DUSE_ALLEGRO4 `allegro-config --cflags`
	GRAPHICSLIB_L       = `allegro-config --libs` 
	gfx_obj             += $(gfx_alleg4_obj)
endif

# SDL 1.2
ifeq ($(GRAPHICS),sdl12)
	GRAPHICSLIB_C       = -DUSE_SDL12 `sdl-config --cflags`
	GRAPHICSLIB_L       = `sdl-config --libs` 
	gfx_obj             += $(gfx_sdl12_obj)
endif


# Use the C or C++ compiler
CC                = gcc-4.0
LD		  = gcc-4.0 -m64
#CFLAGS            = -DASM=\"$(ASM)\" -O3 -m32 -Wall $(PROF) $(DBG)
CFLAGS            = -DASM=\"$(ASM)\" -O3 -m64 -Wall $(PROF) $(DBG)
CFLAGS           += -I. -DPATH_FILES_DAT=\"/$(INSTALL_DATA)/\" -DPATH_FILES_CONF=\"/$(INI_FILES)/\" $(SOUNDLIB_C) -Ijpeg/mac $(GRAPHICSLIB_C)
#CFLAGS           += -I. -DPATH_FILES_DAT=\"/$(INSTALL_DATA)/\" -DPATH_FILES_CONF=\"/$(INI_FILES)/\" -DALLEGRO -DBGUI $(SOUNDLIB_C) -Ijpeg/mac $(GRAPHICSLIB_C)

#LDFLAGS		  = `allegro-config --static`
LDFLAGS		  = $(GRAPHICSLIB_L) $(PROF) $(DBG)

Xopts		  = -Llibs/mac

#Lib_files         = -lithe -ljpeg_x86 -lpng_x86 -lbgui -lz -lsqlite3 -lstdc++
Lib_files         = -lithe -ljpeg -lpng -lz -lsqlite3 -lstdc++
# -lX11 -lXext

ifeq ($(ASM),no_asm)
        CFLAGS   += -DNO_ASM
endif

# include the BGUI2 library
include deb/makefile.bgui2

# include the IT-HE support library
include deb/makefile.ithe

# Include the makefile core
include makefile.all

# Linux-dependent components
lin_obj += audio/fmod3.o audio/fmod4.o audio/allegro.o audio/sdl.o audio/nosound.o

# Assembler cores
ifeq ($(ASM),i386)
        lin_obj += graphics/common/dark_32.o
endif
ifeq ($(ASM),amd64)
        lin_obj += graphics/common/dark_64.o
endif
ifeq ($(ASM),arm)
        lin_obj += graphics/common/dark_arm.o
endif


# Makefile rules

ire: svnrevision.h $(ire_obj) $(lin_obj) $(gfx_obj)
	$(LD) $(Xopts) $(ire_obj) $(gfx_obj) $(lin_obj) $(Lib_files) -o ../ire-engine $(LDFLAGS) $(SOUNDLIB_L)
	-rm -f ire.o
	echo "#define SVNREVISION \"-rev-"`svnversion`"\"" > svnrevision.h

ed: svnrevision.h $(ed_obj) $(lin_obj)
	$(LD) $(Xopts) $(ed_obj) $(gfx_obj) $(lin_obj) $(Lib_files) -o ../ire-ed $(LDFLAGS) $(SOUNDLIB_L)
	-rm -f editor.o

resedit: $(res_obj)
	$(LD)  $(Xopts) $(res_obj) $(Lib_files) -o res $(LDFLAGS)
	-rm -f res.o

resize: $(resize_obj)
	$(LD) $(Xopts) $(resize_obj) -lithe -ljpeg -o tools/resize_map $(LDFLAGS) -lstdc++

mover: $(move_obj)
	$(LD) $(Xopts) $(move_obj) -lithe -ljpeg -o tools/mover $(LDFLAGS)

chknpc: $(chknpc_obj)
	$(LD) $(chknpc_obj) -o tools/chknpc

png2cel: $(png2cel_obj)
	$(LD) $(Xopts) $(png2cel_obj) -lpng -lz -o tools/png2cel

cel2png: $(cel2png_obj)
	$(LD) $(Xopts) $(cel2png_obj) -lpng -lz -o tools/cel2png

cel2font: $(cel2font_obj)
	$(LD) $(cel2font_obj) -lstdc++ -o tools/cel2font

font2cel: $(font2cel_obj)
	$(LD) $(font2cel_obj) -lstdc++ -o tools/font2cel

fixfont: $(fixfont_obj)
	$(LD) $(fixfont_obj) -lstdc++ -o tools/fixfont

grabfont: $(grabfont_obj)
	$(LD) $(grabfont_obj) -lstdc++ -o tools/grabfont

finished:
	@echo "All done"
	
	
svnrevision.h:
	echo "#define SVNREVISION \"-rev-"`svn info | grep Revision | cut -d \  -f 2`"\"" > svnrevision.h
	
%.o: %.c
	$(CC) -c $(CFLAGS) $< -o $@

%.o: %.cc
	$(CC) -c $(CFLAGS) $< -o $@

%.o: %.cpp
	$(CC) -c $(CFLAGS) $< -o $@

%.o: %.S
	$(CC) -c $(CFLAGS) $< -o $@

ifeq ($(ASM),asm)
%.o: %.asm
	nasm -f elf $< -o $@
endif

clean:
	-rm -f $(ire_obj) $(ed_obj) $(resize_obj) $(chknpc_obj)
	-rm -f $(lin_obj) $(move_obj)
	-rm -f $(gfx_obj)
	-rm -f $(Object_ithe) $(Object_bgui2)
	-rm -f ../ire-engine
	-rm -f ../ire-ed
	-rm -f tools/chknpc
	-rm -f tools/resize_map

	echo "#define SVNREVISION \"-rev-"`svn info | grep Revision | cut -d \  -f 2`"\"" > svnrevision.h

distclean:
	-rm -f $(ire_obj) $(ed_obj) $(resize_obj) $(chknpc_obj) $(png2cel_obj) $(cel2png_obj)
	-rm -f $(lin_obj) $(move_obj)
	-rm -f $(gfx_obj)
	-rm -f $(Object_ithe) $(Object_bgui2)
	-rm -f ../ire-engine
	-rm -f ../ire-ed
	-rm -f bootlog.* game.cfg
	-rm -f tools/*
	-rm -f $(library_ithe)
	-rm -f $(library_bgui2)

install:
		install -d $(INSTALL_BIN) $(INSTALL_DATA) $(INI_FILES)
		install ../ire $(INSTALL_BIN)
		install ../ire-ed $(INSTALL_BIN)
		install -m644 ../game.ini $(INI_FILES)/game.ini
