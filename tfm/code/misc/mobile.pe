##########################
#                        #
# Mobile Phone interface #
#                        #
##########################

const PHONEWIDTH = 362
const PHONEHEIGHT = 232
const PHONETEXTMAX = 32
const KEYDELAY = 75

userstring phonetime 10
userstring phonechosen 128
userstring phonetextinput 32
string phoneprompt

##
##  Entry point
##

function use_mobile
int win
int x
int y
int a
int b
int timex
int timey
string timestr
int headermode
int journalmode

save_screen

let journalmode = 0
let headermode = JOURNAL_TODO_ONLY

let x = 640
add x - PHONEWIDTH
add x / 2
let y = 480
add y - PHONEHEIGHT
add y / 2

draw_object phone_img at x y

# Offset to screen
add x + 19
add y + 21

let a = x
let b = y
gotoxy a b
textcolour 0 0 0
textbutton KEY_I = a b "INDEX"
range_pointer KEY_I = 1

# TODO button
let a = x + 64
let b = y
textcolour 0 0 0
textbutton KEY_T = a b "TO-DO"
range_pointer KEY_T = 1

# Disabled text (later buttons?)
let a = x
let b = y + 184
gotoxy a b
textcolour 0xb5 0xb5 0xb5
printxy "Add Entry"

# EXIT button
let a = x + 272
let b = y + 184
textcolour 0 0 0
textbutton KEY_ESC = a b "Exit"
range_pointer KEY_ESC = 1

# Phone buttons

let a = x + 313
let b = y + 47
mouse_range KEY_UP = a b 19 16
range_pointer KEY_UP = 1

let a = x + 313
let b = y + 127
mouse_range KEY_DOWN = a b 19 16
range_pointer KEY_DOWN = 1


# Time X,Y and time string
let timex = x + 264
let timey = y

let phonetime = ""
if game_hour < 10
	add_string phonetime = "0"
endif
add_string phonetime = game_hour
add_string phonetime = ":"
if game_minute < 10
	add_string phonetime = "0"
endif
add_string phonetime = game_minute
let timestr = phonetime

# Offset to first line of display
add y + 8 

# Create the phone window
createwindow win = x y 296 176
if win < 1
	load_screen
	print "The phone is broken!"
	printcr
	return
endif

# Make sure the arrival entry is set at minimum
journal jrn_Arrival

addwindowline win "Journal"
addwindowline win " "
drawjournal win

# Start the loop

do
	drawwindow win
	textcolour 0 0 0
	gotoxy timex timey
	printxy timestr
	getkey_quiet
	wait KEYDELAY BLOCKING

	# Go through the keys
        if key = KEY_MOUSE
                let key = mouseclick
                flush_mouse BLOCKING
        endif

	if key = KEY_UP
	or key = KEY_MOUSEUP
		scrollwindow win -1
	endif

	if key = KEY_DOWN
	or key = KEY_MOUSEDOWN
		scrollwindow win +1
	endif

	if key = KEY_PGUP
		scrollwindow win -10
	endif

	if key = KEY_PGDN
		scrollwindow win +10
	endif

	if key = KEY_HOME
		setwindowpercent win 0
	endif

	if key = KEY_END
		setwindowpercent win 100
	endif

	if key = KEY_T
		# If you press it twice in succession, toggle headers
		if journalmode = 1
			if headermode = JOURNAL_TODO_ONLY
				let headermode = JOURNAL_TODO_HEADER_ONLY
			else
				let headermode = JOURNAL_TODO_ONLY
			endif
		endif
		let journalmode = 1
		clearwindow win
		addwindowline win "To do:"
		addwindowline win " "
		drawjournaltasks win headermode
	endif
	if key = KEY_I
		let journalmode = 0
		clearwindow win
		addwindowline win "Journal"
		addwindowline win " "
		drawjournal win
	endif

while key <> KEY_ESC

destroywindow win

load_screen
let key = 0

return
end


##
##
##

function use_mobile_savegame
int win
int x
int y
int a
int b
int ctr
int last
string chosen

flush_keys

save_screen
textcolour 0 0 0

let x = 640
add x - PHONEWIDTH
add x / 2
let y = 480
add y - PHONEHEIGHT
add y / 2

draw_object phone_img at x y

# Offset to screen
add x + 19
add y + 21

# Message at top of screen
textcolour 0 0 0
let a = x + 112
let b = y
gotoxy a b
printxy "Save Game"

# EXIT button
let a = x
let b = y + 184
textcolour 0 0 0
textbutton KEY_ENTER = a b "Save"
range_pointer KEY_ENTER = 1


# EXIT button
let a = x + 272
let b = y + 184
textcolour 0 0 0
textbutton KEY_ESC = a b "Exit"
range_pointer KEY_ESC = 1

# Phone buttons

let a = x + 313
let b = y + 47
mouse_range KEY_UP = a b 19 16
range_pointer KEY_UP = 1

let a = x + 313
let b = y + 127
mouse_range KEY_DOWN = a b 19 16
range_pointer KEY_DOWN = 1


# Offset to first line of display, and skip another
add y + 16

# Create the phone window
createlist win = x y 296 160
if win < 1
	load_screen
	print "The phone is broken!"
	printcr
	return
endif

lastsave last
for ctr = 1 to last
	addlistsave win ctr
next ctr
addlistline win -666 "[New Slot]"

setlistpercent win 100

listpoll win

# Start the loop

do
	listpoll win
	wait KEYDELAY BLOCKING

	# Go through the keys
        if key = KEY_MOUSE
                let key = mouseclick
                flush_mouse BLOCKING
        endif

	if key = KEY_ENTER
		getlisttext phonechosen = win
		let chosen = phonechosen
		getlistid ctr = win

		if ctr == -1
			load_screen
			bug 1
			print "Error: negative savegame ID!"
			printcr
			bug 0
			return
		endif

/*
		bug 1
		print "CHOSE ITEM: "
		print chosen
		print " : id = "
		print ctr
		printcr
		bug 0
*/		
		let phoneprompt = "Enter the name of your savegame:"
		if ctr = -666
			getdate phonetextinput
		else
			setstr phonetextinput = chosen
		endif
		call mobile_gettext

		if key > 0
/*
			bug 1
			print "Got title:|"
			let phoneprompt = phonetextinput 
			print phoneprompt
			print
			bug 0
*/

			if ctr = -666
				lastsave ctr
				add ctr + 1
			endif
			savegame ctr phonetextinput

		endif
		let key = KEY_ESC
	endif


while key <> KEY_ESC

destroywindow win

load_screen
let key = 0

return
end



function use_mobile_loadgame
int win
int x
int y
int a
int b
int ctr
int last
int slot

flush_keys

save_screen
textcolour 0 0 0

let x = 640
add x - PHONEWIDTH
add x / 2
let y = 480
add y - PHONEHEIGHT
add y / 2

draw_object phone_img at x y

# Offset to screen
add x + 19
add y + 21

# Message at top of screen
textcolour 0 0 0
let a = x + 112
let b = y
gotoxy a b
printxy "Load Game"

# EXIT button
let a = x
let b = y + 184
textcolour 0 0 0
textbutton KEY_ENTER = a b "Load"
range_pointer KEY_ENTER = 1


# EXIT button
let a = x + 272
let b = y + 184
textcolour 0 0 0
textbutton KEY_ESC = a b "Exit"
range_pointer KEY_ESC = 1

# Phone buttons

let a = x + 313
let b = y + 47
mouse_range KEY_UP = a b 19 16
range_pointer KEY_UP = 1

let a = x + 313
let b = y + 127
mouse_range KEY_DOWN = a b 19 16
range_pointer KEY_DOWN = 1


# Offset to first line of display, and skip another
add y + 16

# Create the phone window
createlist win = x y 296 160
if win < 1
	load_screen
	print "The phone is broken!"
	printcr
	return
endif

lastsave last
for ctr = 1 to last
	addlistsave win ctr
next ctr
addlistline win -666 "[Restart Game]"

setlistpercent win 100

listpoll win

# Start the loop

let slot = -1

do
	listpoll win
	wait KEYDELAY BLOCKING

	# Go through the keys
        if key = KEY_MOUSE
                let key = mouseclick
                flush_mouse BLOCKING
        endif

	if key = KEY_ENTER
		getlistid slot = win
		let key = KEY_ESC
	endif

while key <> KEY_ESC

destroywindow win

load_screen
let key = 0
let err = slot

#bug 1
#print "got slot = "
#print slot
#printcr
#bug 0

# If we're in the main menu, prevent the 'Restart Game' option
# That must be handled by the menu instead
if InMenu = 1
and slot == -666
	return
endif

# otherwise, load the game if it's valid
if slot != -1
	loadgame slot
endif

return
end

##
##
##

function mobile_gettext
int x
int y
int a
int b
int px
int py
int pos
int firsttime
int k
string textstr

let firsttime = 1
let x = 640
add x - PHONEWIDTH
add x / 2
let y = 480
add y - PHONEHEIGHT
add y / 2

# EXIT button
let a = x + 256
let b = y + 184
textcolour 0 0 0
textbutton KEY_ESC = a b "Cancel"
range_pointer KEY_ESC = 1

let px = x
let py = y

# Offset to screen
add x + 19
add y + 21

strlen pos = phonetextinput
if pos > 0
	add pos + 1
endif
let textstr = phonetextinput

flush_keys

do

	draw_object phone_img at px py
	textcolour 255 255 255

	let a = x + 8
	let b = y + 96
	gotoxy a b
	printxy phoneprompt

	add b + 16
	gotoxy a b
	printxy textstr
	printxy "_"
	get_key_ascii_quiet k
#	wait KEYDELAY BLOCKING

	# Go through the keys
        if k = KEY_MOUSE
                let k = mouseclick
                flush_mouse BLOCKING
        endif

	# Backspace
        if k = 8
		if firsttime
			# Delete everything
			let pos = 2
			let firsttime = 0
		endif
		if pos > 1
                        add pos - 1
                        strsetpos phonetextinput pos = 0    # Terminate
                endif
		continue
        endif

	# Enter
	if k = 13
		break
	endif

	# ESC
	if k = 27
		let k = -1
		break
	endif

	if k > 31
	and k < 255
	and pos < PHONETEXTMAX
		let firsttime = 0
		strsetpos phonetextinput pos = k
		add pos + 1
		strsetpos phonetextinput pos = 0
	endif


while k <> 27

let key = k

return
end

