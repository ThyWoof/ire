#
#	General light switch code
#

##
##	Toggle
##

function light_toggle

object start
object end

# Find start and end objects

find_tag start = "light_start" current.tag
find_tag end = "light_end" current.tag

# Validate the objects..

if_not_exist start
	return
endif

if_not_exist end
	return
endif

# Toggle light state

if current.user.user0 = 0
	let current.user.user0 = 1
else
	let current.user.user0 = 0
endif

# Set the lights
set_light start to end = current.user.user0

end


##
##	On
##

function light_on

object start
object end

# Find start and end objects

find_tag start = "light_start" current.tag
find_tag end = "light_end" current.tag

# Validate the objects..

if_not_exist start
	return
endif

if_not_exist end
	return
endif

# Toggle light state

let current.user.user0 = 1

# Set the lights

set_light start to end = 0
end


##
##	Off
##

function light_off

object start
object end

# Find start and end objects

find_tag start = "light_start" current.tag
find_tag end = "light_end" current.tag

# Validate the objects..

if_not_exist start
	return
endif

if_not_exist end
	return
endif

# Toggle light state

let current.user.user0 = 0

# Set the lights

set_light start to end = 0

end

##
##  Lights on forever
##

function light_always

object start
object end

# Find start and end objects

let start = current
if_not_exist start
	return
endif

let end = current.stats.owner
if_not_exist end
	BUG start
	print "BROKEN LIGHT: Light at "
	print start.x
	print ","
	print start.y
	print " has no endpoint!"
	printcr
	BUG end
	return
endif

# Set the lights

set_light start to end = 1
end


##
##  Lights flicker
##

function light_flicker
activity

object start
object end

# Find start and end objects

let start = me
let end = me.stats.owner
if_not_exist end
	BUG start
	print "BROKEN LIGHT: Light at "
	print start.x
	print ","
	print start.y
	print " has no endpoint!"
	printcr
	BUG end
	return
endif

if start.user.fx_func = 0
	start_fx start does light_flicker_fx
endif

# Set the lights

#set_light start to end = 1
end


function light_flicker_fx
private
integer x

add current.user.user18 + 1
if current.user.user18 < 5
	return
endif
let current.user.user18 = 0

fx_random x = 100
# Only change it sometimes
if x < 80
	return
endif

if x >= 90
	set_light current to current.stats.owner = 0
else
	set_light current to current.stats.owner = 1
endif

end
  


