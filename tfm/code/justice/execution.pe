##
##	Someone is executed
##



##
##	Hang the victim
##

function hang_victim
object target
object hatch
object guard
int x
int y
int x2

# Mark the victim of the arrest, so everyone else stops trying to arrest them
let arrested = victim

if victim = player


	find_tag target = "gallows" 10000
	if_not_exists target
		print "Error: no gallows to hang the player from|"
		return
	endif

	# Put the player on the scaffold

	fade_out
#	push_object victim to target.x target.y
#	if party_mode = 1
#	move_party_to target
#		spill target
	let x = target.x
	let y = target.y
	add x + 1
	add y + 2

	# Find the trapdoor and ensure it is shut
	get_first_object hatch = x y
	if hatch is called "HATCH_GALLOWS_OPENED"
		let me = hatch.stats.owner
		let current = hatch.stats.owner
		if_exists current
			call current.funcs.use
		else
			print "Error: cannot close gallows (hatch has no parent)|"
			fade_in
			return
		endif
	endif

	if_not_exists hatch.stats.owner
		print "Error: gallows hatch is not owned by the release lever!|"
		fade_in
		return
	endif

	# Create a guard and have them pull the lever
	let x2 = y + 9
	create guard = "guard"
	transfer_object guard to x x2
	queue_action guard does seek_target_use_resume to hatch.stats.owner
	queue_action guard does guard_despawn
	run_queue guard
	set_flag guard IS_SPAWNED = 1	# Guard must evapourate afterwards

	# Move the player into position and have them bound
	transfer_object victim to x y
	set_direction victim facing SOUTH
	if victim = player
		set_leader victim nothing follower_action
	endif

	fade_in

	# Go.. player is helpless and awaiting execution

endif

end


function hang_player
let victim = player
call hang_victim
end

function guillotine_player
print "GUILLOTINE_PLAYER NOT YET SUPPORTED, HANGING INSTEAD|"
call hang_player
end

